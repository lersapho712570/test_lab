---
- name: In-Memory Inventory
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    guid: "{{ lookup('ENV','GUID') }}"
    home: "{{ lookup('ENV','HOME') }}"
    #internal_domain: "example.com"
    internal_domain: "internal"
  tasks:
    - name: Collection instance info
      os_server_info:
        cloud: "{{ guid }}-project"
      register: instances

    - name: Build In-Memory inventory
      add_host:
        #host: "{{ instance.name }}.{{ internal_domain }}"
        #host: "{{ instance.name }}.{{ guid }}.{{ internal_domain }}"
        host: "{{ instance.name }}.example.com"
        ansible_user: cloud-user
        group: "{{ instance.metadata.AnsibleGroup }}"
        ansible_host: "{{ instance.private_v4 }}"
        ssh_private_key_file: "{{ home }}/.ssh/{{ guid }}key.pem"
      #when: instance.metadata.AnsibleGroup == "osp_instance"
      when: instance.metadata.AnsibleGroup == "load_balancers" or instance.metadata.AnsibleGroup == "app_servers" or instance.metadata.AnsibleGroup == "database_servers"
      loop: "{{ instances.openstack_servers }}"
      loop_control:
        loop_var: instance

- name: Print current hosts
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    #- debug: var=instances
    - debug:
       msg: " {{ instances.openstack_servers[0].private_v4 }} "
